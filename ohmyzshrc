# Path to your oh-my-zsh installation.
export ZSH=~/local/sdks/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="powerlevel9k/powerlevel9k"

POWERLEVEL9K_SHORTEN_DIR_LENGTH=1
POWERLEVEL9K_SHORTEN_DELIMITER=""
POWERLEVEL9K_SHORTEN_STRATEGY="truncate_from_right"

#afowler

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

# User configuration

# allow auto-completion from work dir
#[ -d ~/work ] && cdpath+=~/work
function qp {
  DIR=$( cd "$( dirname "$0" )" && pwd )
  echo $DIR
  python qp.py $@
}
# qicd
function qicd {
  p=$(python -m 'qicd' $1)
  if [[ $? -ne 0 ]]; then
    return
  fi
  cd ${p}
}
# git push origin -u
function gpou {
  git push -u origin $(git rev-parse --abbrev-ref HEAD):$(git rev-parse --abbrev-ref HEAD)
}
# git push -f current branch
function gpf {
  git push --force-with-lease origin $(git rev-parse --abbrev-ref HEAD)
}
# use a command in all repos
function all_repos {
  CURRENT_DIR=$(cd "$(dirname "$0")"; pwd)
  REPOS=(
    ~/dev/myscript/Widgets
    ~/dev/myscript/review/Widgets
    ~/dev/myscript/review2/Widgets
    ~/dev/myscript/master/MultimodalInputMethod_Android/InputMethodWidgets
    ~/dev/myscript/master/inputmethodwidgets
    ~/dev/myscript/master/mmi2/InputMethodWidgets
  )
  for REPO in ${REPOS}; do
    echo ${REPO}:
    cd ${REPO}
    $@
  done
  cd ${CURRENT_DIR}
}

if hash qibuild 2>/dev/null;
then
  HAS_QIBUILD=1
else
  HAS_QIBUILD=0
fi

if [ $HAS_QIBUILD == 1 ]
then
  function qc {
    qibuild configure -DQI_WITH_TESTS=OFF $@
  }
  function qm {
    qibuild make $@
  }
  function qct {
    qibuild configure $@
  }
fi

function evil_git_dirty {
  [[ $(git diff --shortstat 2> /dev/null | tail -n1) != "" ]] && echo "*"
}

function evil_git_num_untracked_files {
  expr `git status --porcelain 2>/dev/null| grep "^??" | wc -l`
}

# update function
function qisrc_update_merge_branch
{
  qisrc sync -a
  qisrc foreach -g team/tardis/dev -- git checkout -b team/tardis/merge --track team/origin/tardis/dev
  qisrc foreach -g team/tardis/dev -- git reset --hard origin/team/tardis/dev
  qisrc foreach -g team/tardis/dev -- git push -f gerrit team/tardis/merge
  qisrc foreach -g team/tardis/dev -- git checkout team/tardis/dev
  qisrc foreach -g team/tardis/dev -- git branch -D team/tardis/merge
}

# function reset branch on origin
function grho
{
  branchName=`git rev-parse --abbrev-ref HEAD`
  originBranchName=`git rev-parse --symbolic-full-name @{u}`
  if [[ $originBranchName == *$branchName ]]
  then
    git reset --hard origin/$branchName
  else
    echo >&2 "You surely tried something stupid"
  fi
}

# function to checkout branches and set the remotes
# with multiple remotes.
# This function is NOT needed with a single remote, see:
# http://stackoverflow.com/questions/1783405/checkout-remote-git-branch
function gitcheckoutoriginremote
{
  git checkout -b $1 origin/$1
}

# qibuild aliases
alias qcm64='qibuild configure -DQI_EFFECTIVE_CPP=ON -DQI_WITH_TESTS=OFF -c mac64 '
alias qctm64='qibuild configure -DQI_EFFECTIVE_CPP=ON -DQI_WITH_TESTS=ON -c mac64 '
alias qmm64='qibuild make -c mac64 '
alias qtrm64='qctm64 -s && qmm64 -s && qitest run -c mac64 '
alias qcios='qibuild configure -DQI_WITH_TESTS=OFF -c ios-mac -GXcode '
alias qmios='qibuild make -c ios-mac '
alias qcand='qibuild configure -DQI_WITH_TESTS=OFF -c android-mac '
alias qmand='qibuild make -c android-mac '

# git aliases: http://githowto.com/aliases
alias gs='git status '
alias ga='git add '
alias gb='git branch '
alias gc='git commit'
alias gd='git diff'
alias go='git checkout '
alias go-='git checkout -'
alias gk='gitk --all& '
alias gx='gitx --all '
alias gg='git gui&'
alias gr='git rebase '
alias gri='git rebase -i '


alias got='git '
alias get='git '

# vim alias
alias vim='/Applications/MacVim.app/Contents/MacOS/Vim '
alias mvim='mvim --noplugin '

# prevent iTunes to launch (potentially breaks remote control devices)
# setting it each time will throw an error, but it's best to keep it here...
#launchctl unload -w /System/Library/LaunchAgents/com.apple.rcd.plist

# $1 = type; 0 - both, 1 - tab, 2 - title
# rest = text
setTerminalText () {
  # echo works in bash & zsh
  local mode=$1 ; shift
  echo -ne "\033]$mode;$@\007"
}

# disk usage
alias diskusage='du -d 1 -h '

# path default

export PATH=/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin
# export MANPATH="/usr/local/man:$MANPATH"

source $ZSH/oh-my-zsh.sh
source ~/.zshrc.user

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
